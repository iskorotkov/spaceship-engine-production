syntax = "proto3";

option go_package = "github.com/iskorotkov/spaceship-engine-production/api/data-loader;data_loader";

service DataLoader {
  rpc SaveClient(ClientReq) returns (ClientResp) {}
  rpc SaveComponent(ComponentReq) returns (ComponentResp) {}
  rpc SaveEngine(EngineReq) returns (EngineResp) {}
  rpc SaveOrder(OrderReq) returns (OrderResp) {}
  rpc SaveProvider(ProviderReq) returns (ProviderResp) {}
  rpc SaveRequirement(RequirementReq) returns (RequirementResp) {}
  rpc SaveSupply(SupplyReq) returns (SupplyResp) {}
}

message ClientReq {
  uint32 id = 1;
  string name = 2;
}

message ClientResp {}

message ComponentReq {
  uint32 id = 1;
  string name = 2;
}

message ComponentResp {}

message EngineReq {
  uint32 id = 1;
  string name = 2;
  double power = 3;
}

message EngineResp {}

message OrderReq {
  uint32 id = 1;
  int32 amount = 2;
  int64 createdAt = 3;
  int64 completedAt = 4;
  uint32 clientId = 5;
  uint32 engineId = 6;
}

message OrderResp {}

message ProviderReq {
  uint32 id = 1;
  string name = 2;
}

message ProviderResp {}

message RequirementReq {
  uint32 id = 1;
  uint32 engineId = 2;
  uint32 componentId = 3;
}

message RequirementResp {}

message SupplyReq {
  uint32 id = 1;
  uint32 componentId = 2;
  uint32 providerId = 3;
}

message SupplyResp {}
